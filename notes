HTMLNODE
Next, we're going to need a way to represent HTML nodes. 
A "TextNode" is sort of an intermediate representation between Markdown and HTML, and is specific to inline markup. 
The HTMLNode class will represent a "node" in an HTML document tree 
(like a <p> tag and its contents, or an <a> tag and its contents) and is purpose-built to render itself as HTML.

ASSIGNMENT
Create a new file called htmlnode.py and define a class called HTMLNode in it.

CONSTRUCTOR
The HTMLNode class should have 4 data members set in the constructor:

tag - A string representing the HTML tag name (e.g. "p", "a", "h1", etc.)
value - A string representing the value of the HTML tag (e.g. the text inside a paragraph)
children - A list of HTMLNode objects representing the children of this node
props - A dictionary of key-value pairs representing the attributes of the HTML tag. For example, a link (<a> tag) might have {"href": "https://www.google.com"}
Perhaps counterintuitively, every data member should be optional and default to None:

An HTMLNode without a tag will just render as raw text
An HTMLNode without a value will be assumed to have children
An HTMLNode without children will be assumed to have a value
An HTMLNode without props simply won't have any attributes

TO_HTML METHOD
to_html(self) - For now, this method should just raise a NotImplementedError. 
Child classes will override this method to render themselves as HTML.

PROPS_TO_HTML METHOD
props_to_html(self) - This method should return a string that represents the HTML attributes of the node.

If self.props is:
{"href": "https://www.google.com", "target": "_blank"}

Then self.props_to_html() should return:
 href="https://www.google.com" target="_blank"

Notice the leading space character before href and before target. This is important because HTML attributes are separated by spaces.

REPR METHOD
__repr__(self) - Give yourself a way to print an HTMLNode object and see its tag, value, children, and props. This will be useful for your debugging.

TESTS
Create a new file called test_htmlnode.py and write a test or two for the HTMLNode class. 
You'll probably want to just create a couple of nodes and make sure the props_to_html method works as expected.

When you're satisfied that your class is behaving as expected, move on.
